# 查看当前某个vim配置的值
:set tabstop?

# 查看有哪些colorscheme可以使用
# 输入"colorscheme" + 空格 + 按Tab
:colorscheme [tab]

# 同时写出到新文件
# 假设在编辑file1, 可以使用如下命令写出file2
# 注意file1的内容不会保存, 内容会保存到file2
:w file2

# 强制退出不保存
:q[uit]!

# 修改命令c
# 该命令可以删除一部分文字并立即进入编辑模式
cw - 删除一个单词进入编辑模式

# 删除整行
dd - 直接删除
cc - 清楚整行内容，但停留在原有的缩进位置，编程时比较方便

# 帮助文档
# 比如搜索, 如下命令会显示所有和search有关的内容, 再补全命令进行查看
:h search[ctrl-d]

# 重新加载.vimrc配置文件
:source $MYVIMRC

# vim启动时间分析
# 会将启动耗时记录到startuptime.log文件中，文件名可以自定义
vim --startuptime startuptime.log

# 也可以在vim运行期间执行如下命令，vim将分析执行的每个行为
:profile start profile.log
:profile func *
:profile file *

# 在文档中跳转到光标所在连接
ctrl + ]

# 使下一个选择的文本变为小写
gu{motion}  比如guw使当前单词变为小写
guu         使当前行变为小写

# 使下一个选的文档变为大写
gU{motion} 比如gUw使当前单词变为大写
gUU        使当前行变为大写